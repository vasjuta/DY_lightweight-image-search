version: '3.8'

services:
  downloader:
    build:
      context: ./downloader
      dockerfile: Dockerfile
    volumes:
      - ./data/images:/app/images
      - ./data/image_urls.txt:/app/image_urls.txt
      - ./logs:/app/logs
    networks:
      - app-network

  embedding_service:
    build:
      context: ./embedding_service
      dockerfile: Dockerfile
    volumes:
      - ./data/images:/app/images
      - ./data/embeddings:/app/embeddings
      - ./logs:/app/logs
    depends_on:
      - downloader
    networks:
      - app-network
    command: >
      sh -c "
        echo 'Waiting for downloader to finish...' &&
        while [ ! -f /app/images/.download_complete ]; do sleep 5; done &&
        echo 'Starting embedding service...' &&
        ./process_images.sh"

  qdrant:
    image: qdrant/qdrant:v1.1.3
    environment:
      - QDRANT_STORAGE_TYPE=memory
    ports:
      - "6333:6333"
    volumes:
      - ./logs:/qdrant/logs
    networks:
      - app-network

  indexer:
    build:
      context: ./indexer
      dockerfile: Dockerfile
    volumes:
      - ./data/embeddings:/app/embeddings
      - ./logs:/app/logs
    depends_on:
      - qdrant
      - embedding_service
    networks:
      - app-network
    command: >
      sh -c "
        echo 'Waiting for embedding service to finish...' &&
        while [ ! -f /app/embeddings/.embedding_complete ]; do sleep 5; done &&
        echo 'Starting indexer...' &&
        ./index_vectors.sh"

  web_ui:
    build:
      context: ./web_ui
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - ./data/images:/app/images:ro
      - ./data/embeddings:/app/embeddings:ro
      - ./logs:/app/logs
    depends_on:
      - qdrant
      - indexer
    networks:
      - app-network
    command: >
      sh -c "
        echo 'Waiting for indexer to finish...' &&
        while [ ! -f /app/embeddings/.indexing_complete ]; do
          echo 'Still waiting for indexer... Checking /app/embeddings/' &&
          sleep 5;
        done &&
        echo 'Starting web UI...' &&
        python3 app.py"

networks:
  app-network:
    driver: bridge